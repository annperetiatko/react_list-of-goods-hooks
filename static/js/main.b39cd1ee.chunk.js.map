{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","useState","isSortedAlphabetically","setAlphabet","isSortedByLength","setLength","isReversed","setReverse","originalOrder","setOriginalOrder","sortedArray","setSortedArray","useEffect","className","type","onClick","sorted","sort","a","b","localeCompare","length","reversed","reverse","map","good","ReactDOM","render","document","getElementById"],"mappings":"uOAIaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAgB,WAC3B,MAA8CC,oBAAS,GAAvD,mBAAOC,EAAP,KAA+BC,EAA/B,KACA,EAAsCF,oBAAS,GAA/C,mBAAOG,EAAP,KAAyBC,EAAzB,KACA,EAAiCJ,oBAAS,GAA1C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAA0CN,mBAAmB,IAA7D,mBAAOO,EAAP,KAAsBC,EAAtB,KACA,EAAsCR,mBAAmB,IAAzD,mBAAOS,EAAP,KAAoBC,EAApB,KAEAC,qBAAU,WACRH,EAAiB,GAAD,OAAKV,IACrBY,EAAe,GAAD,OAAKZ,MAClB,IA4CH,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAqBX,EAAsC,GAAb,YACvDa,QAhDe,WAGrB,IAAIC,EAFJb,GAAaD,GACbG,GAAU,GAIRW,EADEV,EACO,YAAII,GAAaO,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEC,cAAcF,MAEhD,YAAIR,GAAaO,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAG3DR,EAAeK,IAkCX,iCAQA,wBACEF,KAAK,SACLD,UAAS,yBAAqBT,EAAgC,GAAb,YACjDW,QA1Ca,WAGnB,IAAIC,EAFJX,GAAWD,GACXD,GAAY,GAIVa,EADEV,EACO,YAAII,GAAaO,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEE,OAASH,EAAEG,UAE7C,YAAIX,GAAaO,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,UAGxDV,EAAeK,IA4BX,4BAQA,wBACEF,KAAK,SACLD,UAAS,yBAAqBP,EAA0B,GAAb,YAC3CS,QApCQ,WACdR,GAAYD,GACZ,IAAMgB,EAAW,YAAIZ,GAAaa,UAElCZ,EAAeW,IA6BX,sBAQGhB,GAAcJ,GAA0BE,IACzC,wBACEU,KAAK,SACLD,UAAU,4BACVE,QAtCI,WACZR,GAAW,GACXJ,GAAY,GACZE,GAAU,GACVM,EAAe,YAAIH,KA+Bb,sBAUJ,6BACGE,EAAYc,KAAI,SAAAC,GAAI,OACnB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YC9GjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b39cd1ee.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App: React.FC = () => {\n  const [isSortedAlphabetically, setAlphabet] = useState(false);\n  const [isSortedByLength, setLength] = useState(false);\n  const [isReversed, setReverse] = useState(false);\n  const [originalOrder, setOriginalOrder] = useState<string[]>([]);\n  const [sortedArray, setSortedArray] = useState<string[]>([]);\n\n  useEffect(() => {\n    setOriginalOrder([...goodsFromServer]);\n    setSortedArray([...goodsFromServer]);\n  }, []);\n\n  const sortByAlphabet = () => {\n    setAlphabet(!isSortedAlphabetically);\n    setLength(false);\n    let sorted;\n\n    if (isReversed) {\n      sorted = [...sortedArray].sort((a, b) => b.localeCompare(a));\n    } else {\n      sorted = [...sortedArray].sort((a, b) => a.localeCompare(b));\n    }\n\n    setSortedArray(sorted);\n  };\n\n  const sortByLength = () => {\n    setLength(!isSortedByLength);\n    setAlphabet(false);\n    let sorted;\n\n    if (isReversed) {\n      sorted = [...sortedArray].sort((a, b) => b.length - a.length);\n    } else {\n      sorted = [...sortedArray].sort((a, b) => a.length - b.length);\n    }\n\n    setSortedArray(sorted);\n  };\n\n  const reverse = () => {\n    setReverse(!isReversed);\n    const reversed = [...sortedArray].reverse();\n\n    setSortedArray(reversed);\n  };\n\n  const reset = () => {\n    setReverse(false);\n    setAlphabet(false);\n    setLength(false);\n    setSortedArray([...originalOrder]);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${!isSortedAlphabetically ? 'is-light' : ''}`}\n          onClick={sortByAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-info ${!isSortedByLength ? 'is-light' : ''}`}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-info ${!isReversed ? 'is-light' : ''}`}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        { (isReversed || isSortedAlphabetically || isSortedByLength) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {sortedArray.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}